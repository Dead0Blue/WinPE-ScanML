import json
import ast
import re
import pandas as pd
from tqdm import tqdm

_ILLEGAL = re.compile(r'[\x00-\x08\x0B-\x0C\x0E-\x1F]')

def clean_value(v):
    if isinstance(v, str):
        return _ILLEGAL.sub('', v)
    return v

def parse_line(line: str) -> dict:
    line = line.replace('“', '"').replace('”', '"').replace("‘", "'").replace("’", "'")
    line = re.sub(r',\s*(}[,\]\}])', r'\1', line)
    try:
        return json.loads(line)
    except json.JSONDecodeError:
        return ast.literal_eval(line)

def jsonl_to_excel(
    jsonl_path: str,
    excel_path: str,
    fields: list[str] = None,
    chunksize: int = 50_000
):
    EXCEL_MAX = 1_048_576  # lignes max par feuille
    # Utilisation d'un context manager pour garantir la sauvegarde
    with pd.ExcelWriter(excel_path, engine='openpyxl') as writer:
        sheet_idx = 1
        startrow = 0
        buffer = []
        total_written = 0

        with open(jsonl_path, 'r', encoding='utf-8') as f:
            for line in tqdm(f, desc="Lecture JSONL"):
                line = line.strip()
                if not line:
                    continue
                try:
                    obj = parse_line(line)
                except Exception:
                    continue

                if fields:
                    row = {k: clean_value(obj.get(k)) for k in fields}
                else:
                    row = {k: clean_value(v) for k, v in obj.items()}
                buffer.append(row)

                if len(buffer) >= chunksize:
                    df = pd.DataFrame(buffer)
                    if startrow + len(df) > EXCEL_MAX:
                        sheet_idx += 1
                        startrow = 0
                    sheet = f"Sheet{sheet_idx}"
                    df.to_excel(writer, sheet_name=sheet,
                                index=False,
                                header=(startrow == 0),
                                startrow=startrow)
                    startrow += len(df)
                    total_written += len(df)
                    buffer.clear()

            # écrire le reste
            if buffer:
                df = pd.DataFrame(buffer)
                if startrow + len(df) > EXCEL_MAX:
                    sheet_idx += 1
                    startrow = 0
                sheet = f"Sheet{sheet_idx}"
                df.to_excel(writer, sheet_name=sheet,
                            index=False,
                            header=(startrow == 0),
                            startrow=startrow)
                total_written += len(df)
                buffer.clear()

    print(f"\n✅ Fini! {total_written} lignes écrites sur {sheet_idx} feuille(s) dans « {excel_path} »")
from google.colab import files

jsonl_to_excel('test_features.jsonl', 'test_features.xlsx')
files.download('test_features.xlsx')
